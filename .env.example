# DNS-Max 系统配置文件示例
# 复制为 .env 并填入实际值
# 
# 🐳 推荐使用 Docker 部署（默认配置）
# 
# ⚠️  重要提醒：
# 1. 生产环境必须修改所有示例值，特别是安全配置项
# 2. SECRET_KEY 和 ENCRYPTION_KEY 泄露会导致严重安全问题
# 3. 使用强密码保护数据库访问

# ===========================================
# 🔴 必须修改的安全配置（生产环境）
# ===========================================

# JWT 令牌签名密钥 - 用于用户认证和授权
# 生产环境必须使用强随机密钥（建议64字符以上）
# 生成命令: openssl rand -hex 64
SECRET_KEY=your_jwt_secret_key_here_please_change_in_production

# API密钥加密密钥 - 保护DNS服务商API密钥
# 必须是32字符长度的随机字符串
# 生成命令: openssl rand -hex 16
ENCRYPTION_KEY=your_32_char_encryption_key_here

# ===========================================
# 🔶 数据库配置
# ===========================================

# PostgreSQL 数据库名称
POSTGRES_DB=dns_max

# PostgreSQL 用户名
POSTGRES_USER=dns_max_user

# PostgreSQL 密码 - 生产环境使用强密码
POSTGRES_PASSWORD=your_strong_database_password_here

# 数据库连接字符串
# 注意：密码部分需要与上面的 POSTGRES_PASSWORD 保持一致
# Docker部署: 使用服务名 "postgres" 作为主机名
# 本地部署: 使用 "localhost" 作为主机名
DATABASE_URL=postgresql+asyncpg://dns_max_user:your_strong_database_password_here@postgres:5432/dns_max

# 数据库部署模式选择
# true: 使用本地安装的PostgreSQL
# false: 使用Docker容器中的PostgreSQL（推荐）
USE_LOCAL_DB=false

# ===========================================
# 🔵 API和前端配置
# ===========================================

# 前端访问后端API的基础地址
# 本地开发: http://localhost:8000/api/v1
# 生产环境: https://your-domain.com/api/v1
NEXT_PUBLIC_API_URL=http://localhost:8000/api/v1

# ===========================================
# 🟡 运行环境配置
# ===========================================

# 应用运行环境
# development: 开发环境
# production: 生产环境
NODE_ENV=development

# ===========================================
# 🟢 缓存配置（可选）
# ===========================================

# Redis 缓存服务地址
# Docker部署: redis://redis:6379/0
# 本地部署: redis://localhost:6379/0
REDIS_URL=redis://redis:6379/0

# ===========================================
# 🔧 Docker部署配置（仅Docker部署时需要）
# ===========================================

# 后端服务镜像
BACKEND_IMAGE=ghcr.io/alice-easy/dns-max-backend:latest

# 前端服务镜像  
FRONTEND_IMAGE=ghcr.io/alice-easy/dns-max-frontend:latest

# ===========================================
# 📝 配置说明
# ===========================================
# 
# 快速开始（推荐Docker部署）：
# 1. cp .env.example .env
# 2. 生成安全密钥：
#    SECRET_KEY: openssl rand -hex 64
#    ENCRYPTION_KEY: openssl rand -hex 16
# 3. 设置强数据库密码
# 4. 根据部署方式调整 USE_LOCAL_DB（默认false使用Docker）
# 5. 生产环境更新 NEXT_PUBLIC_API_URL
# 6. 运行: docker-compose up -d
#
# Docker部署优势：
# - 零配置，开箱即用
# - 环境隔离，避免冲突
# - 便于部署和迁移
# - 数据持久化保存
#
# 详细文档请参考：README.md
